# uwsgi_python3
# Autogenerated from man page /usr/share/man/man1/uwsgi_python3.1.gz
complete -c uwsgi_python3 -s s -l socket --description 'bind to the specified UNIX/TCP socket using default protocol.'
complete -c uwsgi_python3 -l uwsgi-socket --description 'bind to the specified UNIX/TCP socket using uwsgi protocol.'
complete -c uwsgi_python3 -l suwsgi-socket --description 'bind to the specified UNIX/TCP socket using uwsgi protocol over SSL.'
complete -c uwsgi_python3 -l ssl-socket --description 'bind to the specified UNIX/TCP socket using uwsgi protocol over SSL.'
complete -c uwsgi_python3 -l http-socket --description 'bind to the specified UNIX/TCP socket using HTTP protocol.'
complete -c uwsgi_python3 -l http-socket-modifier1 --description 'force the specified modifier1 when using HTTP protocol.'
complete -c uwsgi_python3 -l http-socket-modifier2 --description 'force the specified modifier2 when using HTTP protocol.'
complete -c uwsgi_python3 -l https-socket --description 'bind to the specified UNIX/TCP socket using HTTPS protocol.'
complete -c uwsgi_python3 -l https-socket-modifier1 --description 'force the specified modifier1 when using HTTPS protocol.'
complete -c uwsgi_python3 -l https-socket-modifier2 --description 'force the specified modifier2 when using HTTPS protocol.'
complete -c uwsgi_python3 -l fastcgi-socket --description 'bind to the specified UNIX/TCP socket using FastCGI protocol.'
complete -c uwsgi_python3 -l fastcgi-nph-socket --description 'bind to the specified UNIX/TCP socket using FastCGI protocol (nph mode).'
complete -c uwsgi_python3 -l fastcgi-modifier1 --description 'force the specified modifier1 when using FastCGI protocol.'
complete -c uwsgi_python3 -l fastcgi-modifier2 --description 'force the specified modifier2 when using FastCGI protocol.'
complete -c uwsgi_python3 -l scgi-socket --description 'bind to the specified UNIX/TCP socket using SCGI protocol.'
complete -c uwsgi_python3 -l scgi-nph-socket --description 'bind to the specified UNIX/TCP socket using SCGI protocol (nph mode).'
complete -c uwsgi_python3 -l scgi-modifier1 --description 'force the specified modifier1 when using SCGI protocol.'
complete -c uwsgi_python3 -l scgi-modifier2 --description 'force the specified modifier2 when using SCGI protocol.'
complete -c uwsgi_python3 -l raw-socket --description 'bind to the specified UNIX/TCP socket using RAW protocol.'
complete -c uwsgi_python3 -l raw-modifier1 --description 'force the specified modifier1 when using RAW protocol.'
complete -c uwsgi_python3 -l raw-modifier2 --description 'force the specified modifier2 when using RAW protocol.'
complete -c uwsgi_python3 -l puwsgi-socket --description 'bind to the specified UNIX/TCP socket using persistent uwsgi protocol (puwsgi…'
complete -c uwsgi_python3 -l protocol --description 'force the specified protocol for default sockets.'
complete -c uwsgi_python3 -l socket-protocol --description 'force the specified protocol for default sockets.'
complete -c uwsgi_python3 -l shared-socket --description 'create a shared socket for advanced jailing or ipc.'
complete -c uwsgi_python3 -l undeferred-shared-socket --description 'create a shared socket for advanced jailing or ipc (undeferred mode).'
complete -c uwsgi_python3 -s p -l processes --description 'spawn the specified number of workers/processes.'
complete -c uwsgi_python3 -l workers --description 'spawn the specified number of workers/processes.'
complete -c uwsgi_python3 -l thunder-lock --description 'serialize accept() usage (if possible).'
complete -c uwsgi_python3 -s t -l harakiri --description 'set harakiri timeout.'
complete -c uwsgi_python3 -l harakiri-verbose --description 'enable verbose mode for harakiri.'
complete -c uwsgi_python3 -l harakiri-no-arh --description 'do not enable harakiri during after-request-hook.'
complete -c uwsgi_python3 -l no-harakiri-arh --description 'do not enable harakiri during after-request-hook.'
complete -c uwsgi_python3 -l no-harakiri-after-req-hook --description 'do not enable harakiri during after-request-hook.'
complete -c uwsgi_python3 -l backtrace-depth --description 'set backtrace depth.'
complete -c uwsgi_python3 -l mule-harakiri --description 'set harakiri timeout for mule tasks.'
complete -c uwsgi_python3 -s x -l xmlconfig --description 'load config from xml file.'
complete -c uwsgi_python3 -l xml --description 'load config from xml file.'
complete -c uwsgi_python3 -l config --description 'load configuration using the pluggable system.'
complete -c uwsgi_python3 -l fallback-config --description 're-exec uwsgi with the specified config when exit code is 1.'
complete -c uwsgi_python3 -l strict --description 'enable strict mode (placeholder cannot be used).'
complete -c uwsgi_python3 -l skip-zero --description 'skip check of file descriptor 0.'
complete -c uwsgi_python3 -l skip-atexit --description 'skip atexit hooks (ignored by the master).'
complete -c uwsgi_python3 -s S -l set --description 'set a placeholder or an option.'
complete -c uwsgi_python3 -l set-placeholder --description 'set a placeholder.'
complete -c uwsgi_python3 -l set-ph --description 'set a placeholder.'
complete -c uwsgi_python3 -l get --description 'print the specified option value and exit.'
complete -c uwsgi_python3 -l declare-option --description 'declare a new uWSGI custom option.'
complete -c uwsgi_python3 -l declare-option2 --description 'declare a new uWSGI custom option (non-immediate).'
complete -c uwsgi_python3 -l resolve --description 'place the result of a dns query in the specified placeholder, sytax: placehol…'
complete -c uwsgi_python3 -l for --description '(opt logic) for cycle.'
complete -c uwsgi_python3 -l for-glob --description '(opt logic) for cycle (expand glob).'
complete -c uwsgi_python3 -l for-times --description '(opt logic) for cycle (expand the specified num to a list starting from 1).'
complete -c uwsgi_python3 -l for-readline --description '(opt logic) for cycle (expand the specified file to a list of lines).'
complete -c uwsgi_python3 -l endfor --description '(opt logic) end for cycle.'
complete -c uwsgi_python3 -l end-for --description '(opt logic) end for cycle.'
complete -c uwsgi_python3 -l if-opt --description '(opt logic) check for option.'
complete -c uwsgi_python3 -l if-not-opt --description '(opt logic) check for option.'
complete -c uwsgi_python3 -l if-env --description '(opt logic) check for environment variable.'
complete -c uwsgi_python3 -l if-not-env --description '(opt logic) check for environment variable.'
complete -c uwsgi_python3 -l ifenv --description '(opt logic) check for environment variable.'
complete -c uwsgi_python3 -l if-reload --description '(opt logic) check for reload.'
complete -c uwsgi_python3 -l if-not-reload --description '(opt logic) check for reload.'
complete -c uwsgi_python3 -l if-hostname --description '(opt logic) check for hostname.'
complete -c uwsgi_python3 -l if-not-hostname --description '(opt logic) check for hostname.'
complete -c uwsgi_python3 -l if-hostname-match --description '(opt logic) try to match hostname against a regular expression.'
complete -c uwsgi_python3 -l if-not-hostname-match --description '(opt logic) try to match hostname against a regular expression.'
complete -c uwsgi_python3 -l if-exists --description '(opt logic) check for file/directory existence.'
complete -c uwsgi_python3 -l if-not-exists --description '(opt logic) check for file/directory existence.'
complete -c uwsgi_python3 -l ifexists --description '(opt logic) check for file/directory existence.'
complete -c uwsgi_python3 -l if-plugin --description '(opt logic) check for plugin.'
complete -c uwsgi_python3 -l if-not-plugin --description '(opt logic) check for plugin.'
complete -c uwsgi_python3 -l ifplugin --description '(opt logic) check for plugin.'
complete -c uwsgi_python3 -l if-file --description '(opt logic) check for file existance.'
complete -c uwsgi_python3 -l if-not-file --description '(opt logic) check for file existance.'
complete -c uwsgi_python3 -l if-dir --description '(opt logic) check for directory existance.'
complete -c uwsgi_python3 -l if-not-dir --description '(opt logic) check for directory existance.'
complete -c uwsgi_python3 -l ifdir --description '(opt logic) check for directory existance.'
complete -c uwsgi_python3 -l if-directory --description '(opt logic) check for directory existance.'
complete -c uwsgi_python3 -l endif --description '(opt logic) end if.'
complete -c uwsgi_python3 -l end-if --description '(opt logic) end if.'
complete -c uwsgi_python3 -l blacklist --description 'set options blacklist context.'
complete -c uwsgi_python3 -l end-blacklist --description 'clear options blacklist context.'
complete -c uwsgi_python3 -l whitelist --description 'set options whitelist context.'
complete -c uwsgi_python3 -l end-whitelist --description 'clear options whitelist context.'
complete -c uwsgi_python3 -l ignore-sigpipe --description 'do not report (annoying) SIGPIPE.'
complete -c uwsgi_python3 -l ignore-write-errors --description 'do not report (annoying) write()/writev() errors.'
complete -c uwsgi_python3 -l write-errors-tolerance --description 'set the maximum number of allowed write errors (default: no tolerance).'
complete -c uwsgi_python3 -l write-errors-exception-only --description 'only raise an exception on write errors giving control to the app itself.'
complete -c uwsgi_python3 -l disable-write-exception --description 'disable exception generation on write()/writev().'
complete -c uwsgi_python3 -l inherit --description 'use the specified file as config template.'
complete -c uwsgi_python3 -l include --description 'include the specified file as immediate configuration.'
complete -c uwsgi_python3 -l inject-before --description 'inject a text file before the config file (advanced templating).'
complete -c uwsgi_python3 -l inject-after --description 'inject a text file after the config file (advanced templating).'
complete -c uwsgi_python3 -s d -l daemonize --description 'daemonize uWSGI.'
complete -c uwsgi_python3 -l daemonize2 --description 'daemonize uWSGI after app loading.'
complete -c uwsgi_python3 -l stop --description 'stop an instance.'
complete -c uwsgi_python3 -l reload --description 'reload an instance.'
complete -c uwsgi_python3 -l pause --description 'pause an instance.'
complete -c uwsgi_python3 -l suspend --description 'suspend an instance.'
complete -c uwsgi_python3 -l resume --description 'resume an instance.'
complete -c uwsgi_python3 -l connect-and-read --description 'connect to a socket and wait for data from it.'
complete -c uwsgi_python3 -l extract --description 'fetch/dump any supported address to stdout.'
complete -c uwsgi_python3 -s l -l listen --description 'set the socket listen queue size.'
complete -c uwsgi_python3 -s v -l max-vars --description 'set the amount of internal iovec/vars structures.'
complete -c uwsgi_python3 -l max-apps --description 'set the maximum number of per-worker applications.'
complete -c uwsgi_python3 -s b -l buffer-size --description 'set internal buffer size.'
complete -c uwsgi_python3 -s m -l memory-report --description 'enable memory report.'
complete -c uwsgi_python3 -l profiler --description 'enable the specified profiler.'
complete -c uwsgi_python3 -s c -l cgi-mode --description 'force CGI-mode for plugins supporting it.'
complete -c uwsgi_python3 -s a -l abstract-socket --description 'force UNIX socket in abstract mode (Linux only).'
complete -c uwsgi_python3 -s C -l chmod-socket --description 'chmod-socket.'
complete -c uwsgi_python3 -l chmod --description 'chmod-socket.'
complete -c uwsgi_python3 -l chown-socket --description 'chown unix sockets.'
complete -c uwsgi_python3 -l umask --description 'set umask.'
complete -c uwsgi_python3 -l freebind --description 'put socket in freebind mode.'
complete -c uwsgi_python3 -l map-socket --description 'map sockets to specific workers.'
complete -c uwsgi_python3 -s T -l enable-threads --description 'enable threads.'
complete -c uwsgi_python3 -l no-threads-wait --description 'do not wait for threads cancellation on quit/reload.'
complete -c uwsgi_python3 -l auto-procname --description 'automatically set processes name to something meaningful.'
complete -c uwsgi_python3 -l procname-prefix --description 'add a prefix to the process names.'
complete -c uwsgi_python3 -l procname-prefix-spaced --description 'add a spaced prefix to the process names.'
complete -c uwsgi_python3 -l procname-append --description 'append a string to process names.'
complete -c uwsgi_python3 -l procname --description 'set process names.'
complete -c uwsgi_python3 -l procname-master --description 'set master process name.'
complete -c uwsgi_python3 -s i -l single-interpreter --description 'do not use multiple interpreters (where available).'
complete -c uwsgi_python3 -l need-app --description 'exit if no app can be loaded.'
complete -c uwsgi_python3 -s M -l master --description 'enable master process.'
complete -c uwsgi_python3 -l honour-stdin --description 'do not remap stdin to \\,/dev/null\\/.'
complete -c uwsgi_python3 -l emperor --description 'run the Emperor.'
complete -c uwsgi_python3 -l emperor-proxy-socket --description 'force the vassal to became an Emperor proxy.'
complete -c uwsgi_python3 -l emperor-wrapper --description 'set a binary wrapper for vassals.'
complete -c uwsgi_python3 -l emperor-wrapper-override --description 'set a binary wrapper for vassals to try before the default one.'
complete -c uwsgi_python3 -l emperor-wrapper-fallback --description 'set a binary wrapper for vassals to try as a last resort.'
complete -c uwsgi_python3 -l emperor-nofollow --description 'do not follow symlinks when checking for mtime.'
complete -c uwsgi_python3 -l emperor-procname --description 'set the Emperor process name.'
complete -c uwsgi_python3 -l emperor-freq --description 'set the Emperor scan frequency (default 3 seconds).'
complete -c uwsgi_python3 -l emperor-required-heartbeat --description 'set the Emperor tolerance about heartbeats.'
complete -c uwsgi_python3 -l emperor-curse-tolerance --description 'set the Emperor tolerance about cursed vassals.'
complete -c uwsgi_python3 -l emperor-pidfile --description 'write the Emperor pid in the specified file.'
complete -c uwsgi_python3 -l emperor-tyrant --description 'put the Emperor in Tyrant mode.'
complete -c uwsgi_python3 -l emperor-tyrant-nofollow --description 'do not follow symlinks when checking for uid/gid in Tyrant mode.'
complete -c uwsgi_python3 -l emperor-stats --description 'run the Emperor stats server.'
complete -c uwsgi_python3 -l emperor-stats-server --description 'run the Emperor stats server.'
complete -c uwsgi_python3 -l early-emperor --description 'spawn the emperor as soon as possibile.'
complete -c uwsgi_python3 -l emperor-broodlord --description 'run the emperor in BroodLord mode.'
complete -c uwsgi_python3 -l emperor-throttle --description 'set throttling level (in milliseconds) for bad behaving vassals (default 1000…'
complete -c uwsgi_python3 -l emperor-max-throttle --description 'set max throttling level (in milliseconds) for bad behaving vassals (default …'
complete -c uwsgi_python3 -l emperor-magic-exec --description 'prefix vassals config files with exec:// if they have the executable bit.'
complete -c uwsgi_python3 -l emperor-on-demand-extension --description 'search for text file (vassal name + extension) containing the on demand socke…'
complete -c uwsgi_python3 -l emperor-on-demand-ext --description 'search for text file (vassal name + extension) containing the on demand socke…'
complete -c uwsgi_python3 -l emperor-on-demand-directory --description 'enable on demand mode binding to the unix socket in the specified directory n…'
complete -c uwsgi_python3 -l emperor-on-demand-dir --description 'enable on demand mode binding to the unix socket in the specified directory n…'
complete -c uwsgi_python3 -l emperor-on-demand-exec --description 'use the output of the specified command as on demand socket name (the vassal …'
complete -c uwsgi_python3 -l emperor-extra-extension --description 'allows the specified extension in the Emperor (vassal will be called with --c…'
complete -c uwsgi_python3 -l emperor-extra-ext --description 'allows the specified extension in the Emperor (vassal will be called with --c…'
complete -c uwsgi_python3 -l emperor-no-blacklist --description 'disable Emperor blacklisting subsystem.'
complete -c uwsgi_python3 -l emperor-use-clone --description 'use clone() instead of fork() passing the specified unshare() flags.'
complete -c uwsgi_python3 -l emperor-cap --description 'set vassals capability.'
complete -c uwsgi_python3 -l vassals-cap --description 'set vassals capability.'
complete -c uwsgi_python3 -l vassal-cap --description 'set vassals capability.'
complete -c uwsgi_python3 -l imperial-monitor-list --description 'list enabled imperial monitors.'
complete -c uwsgi_python3 -l imperial-monitors-list --description 'list enabled imperial monitors.'
complete -c uwsgi_python3 -l vassals-inherit --description 'add config templates to vassals config (uses --inherit).'
complete -c uwsgi_python3 -l vassals-include --description 'include config templates to vassals config (uses --include instead of --inher…'
complete -c uwsgi_python3 -l vassals-inherit-before --description 'add config templates to vassals config (uses --inherit, parses before the vas…'
complete -c uwsgi_python3 -l vassals-include-before --description 'include config templates to vassals config (uses --include instead of --inher…'
complete -c uwsgi_python3 -l vassals-start-hook --description 'run the specified command before each vassal starts.'
complete -c uwsgi_python3 -l vassals-stop-hook --description 'run the specified command after vassal\'s death.'
complete -c uwsgi_python3 -l vassal-sos --description 'ask emperor for reinforcement when overloaded.'
complete -c uwsgi_python3 -l vassal-sos-backlog --description 'ask emperor for sos if backlog queue has more items than the value specified.'
complete -c uwsgi_python3 -l vassals-set --description 'automatically set the specified option (via --set) for every vassal.'
complete -c uwsgi_python3 -l vassal-set --description 'automatically set the specified option (via --set) for every vassal.'
complete -c uwsgi_python3 -l heartbeat --description 'announce healthiness to the emperor.'
complete -c uwsgi_python3 -l reload-mercy --description 'set the maximum time (in seconds) we wait for workers and other processes to …'
complete -c uwsgi_python3 -l worker-reload-mercy --description 'set the maximum time (in seconds) a worker can take to reload/shutdown (defau…'
complete -c uwsgi_python3 -l mule-reload-mercy --description 'set the maximum time (in seconds) a mule can take to reload/shutdown (default…'
complete -c uwsgi_python3 -l exit-on-reload --description 'force exit even if a reload is requested.'
complete -c uwsgi_python3 -l die-on-term --description 'exit instead of brutal reload on SIGTERM.'
complete -c uwsgi_python3 -l force-gateway --description 'force the spawn of the first registered gateway without a master.'
complete -c uwsgi_python3 -s h -l help --description 'show this help.'
complete -c uwsgi_python3 -l usage --description 'show this help.'
complete -c uwsgi_python3 -l print-sym --description 'print content of the specified binary symbol.'
complete -c uwsgi_python3 -l print-symbol --description 'print content of the specified binary symbol.'
complete -c uwsgi_python3 -s r -l reaper --description 'call waitpid(-1,. ) after each request to get rid of zombies.'
complete -c uwsgi_python3 -s R -l max-requests --description 'reload workers after the specified amount of managed requests.'
complete -c uwsgi_python3 -l min-worker-lifetime --description 'number of seconds worker must run before being reloaded (default is 60).'
complete -c uwsgi_python3 -l max-worker-lifetime --description 'reload workers after the specified amount of seconds (default is disabled).'
complete -c uwsgi_python3 -s z -l socket-timeout --description 'set internal sockets timeout.'
complete -c uwsgi_python3 -l no-fd-passing --description 'disable file descriptor passing.'
complete -c uwsgi_python3 -l locks --description 'create the specified number of shared locks.'
complete -c uwsgi_python3 -l lock-engine --description 'set the lock engine.'
complete -c uwsgi_python3 -l ftok --description 'set the ipcsem key via ftok() for avoiding duplicates.'
complete -c uwsgi_python3 -l persistent-ipcsem --description 'do not remove ipcsem\'s on shutdown.'
complete -c uwsgi_python3 -s A -l sharedarea --description 'create a raw shared memory area of specified pages (note: it supports keyval …'
complete -c uwsgi_python3 -l safe-fd --description 'do not close the specified file descriptor.'
complete -c uwsgi_python3 -l fd-safe --description 'do not close the specified file descriptor.'
complete -c uwsgi_python3 -l cache --description 'create a shared cache containing given elements.'
complete -c uwsgi_python3 -l cache-blocksize --description 'set cache blocksize.'
complete -c uwsgi_python3 -l cache-store --description 'enable persistent cache to disk.'
complete -c uwsgi_python3 -l cache-store-sync --description 'set frequency of sync for persistent cache.'
complete -c uwsgi_python3 -l cache-no-expire --description 'disable auto sweep of expired items.'
complete -c uwsgi_python3 -l cache-expire-freq --description 'set the frequency of cache sweeper scans (default 3 seconds).'
complete -c uwsgi_python3 -l cache-report-freed-items --description 'constantly report the cache item freed by the sweeper (use only for debug).'
complete -c uwsgi_python3 -l cache-udp-server --description 'bind the cache udp server (used only for set/update/delete) to the specified …'
complete -c uwsgi_python3 -l cache-udp-node --description 'send cache update/deletion to the specified cache udp server.'
complete -c uwsgi_python3 -l cache-sync --description 'copy the whole content of another uWSGI cache server on server startup.'
complete -c uwsgi_python3 -l cache-use-last-modified --description 'update last_modified_at timestamp on every cache item modification (default i…'
complete -c uwsgi_python3 -l add-cache-item --description 'add an item in the cache.'
complete -c uwsgi_python3 -l load-file-in-cache --description 'load a static file in the cache.'
complete -c uwsgi_python3 -l load-file-in-cache-gzip --description 'load a static file in the cache with gzip compression.'
complete -c uwsgi_python3 -l cache2 --description 'create a new generation shared cache (keyval syntax).'
complete -c uwsgi_python3 -l queue --description 'enable shared queue.'
complete -c uwsgi_python3 -l queue-blocksize --description 'set queue blocksize.'
complete -c uwsgi_python3 -l queue-store --description 'enable persistent queue to disk.'
complete -c uwsgi_python3 -l queue-store-sync --description 'set frequency of sync for persistent queue.'
complete -c uwsgi_python3 -s Q -l spooler --description 'run a spooler on the specified directory.'
complete -c uwsgi_python3 -l spooler-external --description 'map spoolers requests to a spooler directory managed by an external instance.'
complete -c uwsgi_python3 -l spooler-ordered --description 'try to order the execution of spooler tasks.'
complete -c uwsgi_python3 -l spooler-chdir --description 'chdir() to specified directory before each spooler task.'
complete -c uwsgi_python3 -l spooler-processes --description 'set the number of processes for spoolers.'
complete -c uwsgi_python3 -l spooler-quiet --description 'do not be verbose with spooler tasks.'
complete -c uwsgi_python3 -l spooler-max-tasks --description 'set the maximum number of tasks to run before recycling a spooler.'
complete -c uwsgi_python3 -l spooler-harakiri --description 'set harakiri timeout for spooler tasks.'
complete -c uwsgi_python3 -l spooler-frequency --description 'set spooler frequency.'
complete -c uwsgi_python3 -l spooler-freq --description 'set spooler frequency.'
complete -c uwsgi_python3 -l mule --description 'add a mule.'
complete -c uwsgi_python3 -l mules --description 'add the specified number of mules.'
complete -c uwsgi_python3 -l farm --description 'add a mule farm.'
complete -c uwsgi_python3 -l mule-msg-size --description 'set mule message buffer size.'
complete -c uwsgi_python3 -l signal --description 'send a uwsgi signal to a server.'
complete -c uwsgi_python3 -l signal-bufsize --description 'set buffer size for signal queue.'
complete -c uwsgi_python3 -l signals-bufsize --description 'set buffer size for signal queue.'
complete -c uwsgi_python3 -l signal-timer --description 'add a timer (syntax: <signal> <seconds>).'
complete -c uwsgi_python3 -l timer --description 'add a timer (syntax: <signal> <seconds>).'
complete -c uwsgi_python3 -l signal-rbtimer --description 'add a redblack timer (syntax: <signal> <seconds>).'
complete -c uwsgi_python3 -l rbtimer --description 'add a redblack timer (syntax: <signal> <seconds>).'
complete -c uwsgi_python3 -l rpc-max --description 'maximum number of rpc slots (default: 64).'
complete -c uwsgi_python3 -s L -l disable-logging --description 'disable request logging.'
complete -c uwsgi_python3 -l flock --description 'lock the specified file before starting, exit if locked.'
complete -c uwsgi_python3 -l flock-wait --description 'lock the specified file before starting, wait if locked.'
complete -c uwsgi_python3 -l flock2 --description 'lock the specified file after logging/daemon setup, exit if locked.'
complete -c uwsgi_python3 -l flock-wait2 --description 'lock the specified file after logging/daemon setup, wait if locked.'
complete -c uwsgi_python3 -l pidfile --description 'create pidfile (before privileges drop).'
complete -c uwsgi_python3 -l pidfile2 --description 'create pidfile (after privileges drop).'
complete -c uwsgi_python3 -l chroot --description 'chroot() to the specified directory.'
complete -c uwsgi_python3 -l pivot-root --description 'pivot_root() to the specified directories (new_root and put_old must be separ…'
complete -c uwsgi_python3 -l pivot_root --description 'pivot_root() to the specified directories (new_root and put_old must be separ…'
complete -c uwsgi_python3 -l uid --description 'setuid to the specified user/uid.'
complete -c uwsgi_python3 -l gid --description 'setgid to the specified group/gid.'
complete -c uwsgi_python3 -l add-gid --description 'add the specified group id to the process credentials.'
complete -c uwsgi_python3 -l immediate-uid --description 'setuid to the specified user/uid IMMEDIATELY.'
complete -c uwsgi_python3 -l immediate-gid --description 'setgid to the specified group/gid IMMEDIATELY.'
complete -c uwsgi_python3 -l no-initgroups --description 'disable additional groups set via initgroups().'
complete -c uwsgi_python3 -l cap --description 'set process capability.'
complete -c uwsgi_python3 -l unshare --description 'unshare() part of the processes and put it in a new namespace.'
complete -c uwsgi_python3 -l unshare2 --description 'unshare() part of the processes and put it in a new namespace after rootfs ch…'
complete -c uwsgi_python3 -l setns-socket --description 'expose a unix socket returning namespace fds from \\,/proc/self/ns\\/.'
complete -c uwsgi_python3 -l setns-socket-skip --description 'skip the specified entry when sending setns file descriptors.'
complete -c uwsgi_python3 -l setns-skip --description 'skip the specified entry when sending setns file descriptors.'
complete -c uwsgi_python3 -l setns --description 'join a namespace created by an external uWSGI instance.'
complete -c uwsgi_python3 -l setns-preopen --description 'open \\,/proc/self/ns\\/ as soon as possible and cache fds.'
complete -c uwsgi_python3 -l jailed --description 'mark the instance as jailed (force the execution of post_jail hooks).'
complete -c uwsgi_python3 -l refork --description 'fork() again after privileges drop.  Useful for jailing systems.'
complete -c uwsgi_python3 -l re-fork --description 'fork() again after privileges drop.  Useful for jailing systems.'
complete -c uwsgi_python3 -l refork-as-root --description 'fork() again before privileges drop.  Useful for jailing systems.'
complete -c uwsgi_python3 -l re-fork-as-root --description 'fork() again before privileges drop.  Useful for jailing systems.'
complete -c uwsgi_python3 -l refork-post-jail --description 'fork() again after jailing.  Useful for jailing systems.'
complete -c uwsgi_python3 -l re-fork-post-jail --description 'fork() again after jailing.  Useful for jailing systems.'
complete -c uwsgi_python3 -l hook-asap --description 'run the specified hook as soon as possible.'
complete -c uwsgi_python3 -l hook-pre-jail --description 'run the specified hook before jailing.'
complete -c uwsgi_python3 -l hook-post-jail --description 'run the specified hook after jailing.'
complete -c uwsgi_python3 -l hook-in-jail --description 'run the specified hook in jail after initialization.'
complete -c uwsgi_python3 -l hook-as-root --description 'run the specified hook before privileges drop.'
complete -c uwsgi_python3 -l hook-as-user --description 'run the specified hook after privileges drop.'
complete -c uwsgi_python3 -l hook-as-user-atexit --description 'run the specified hook before app exit and reload.'
complete -c uwsgi_python3 -l hook-pre-app --description 'run the specified hook before app loading.'
complete -c uwsgi_python3 -l hook-post-app --description 'run the specified hook after app loading.'
complete -c uwsgi_python3 -l hook-post-fork --description 'run the specified hook after each fork.'
complete -c uwsgi_python3 -l hook-accepting --description 'run the specified hook after each worker enter the accepting phase.'
complete -c uwsgi_python3 -l hook-accepting1 --description 'run the specified hook after the first worker enters the accepting phase.'
complete -c uwsgi_python3 -l hook-accepting-once --description 'run the specified hook after each worker enter the accepting phase (once per-…'
complete -c uwsgi_python3 -l hook-accepting1-once --description 'run the specified hook after the first worker enters the accepting phase (onc…'
complete -c uwsgi_python3 -l hook-master-start --description 'run the specified hook when the Master starts.'
complete -c uwsgi_python3 -l hook-touch --description 'run the specified hook when the specified file is touched (syntax: <file> <ac…'
complete -c uwsgi_python3 -l hook-emperor-start --description 'run the specified hook when the Emperor starts.'
complete -c uwsgi_python3 -l hook-emperor-stop --description 'run the specified hook when the Emperor send a stop message.'
complete -c uwsgi_python3 -l hook-emperor-reload --description 'run the specified hook when the Emperor send a reload message.'
complete -c uwsgi_python3 -l hook-emperor-lost --description 'run the specified hook when the Emperor connection is lost.'
complete -c uwsgi_python3 -l hook-as-vassal --description 'run the specified hook before exec()ing the vassal.'
complete -c uwsgi_python3 -l hook-as-emperor --description 'run the specified hook in the emperor after the vassal has been started.'
complete -c uwsgi_python3 -l hook-as-mule --description 'run the specified hook in each mule.'
complete -c uwsgi_python3 -l hook-as-gateway --description 'run the specified hook in each gateway.'
complete -c uwsgi_python3 -l after-request-hook --description 'run the specified function/symbol after each request.'
complete -c uwsgi_python3 -l after-request-call --description 'run the specified function/symbol after each request.'
complete -c uwsgi_python3 -l exec-asap --description 'run the specified command as soon as possible.'
complete -c uwsgi_python3 -l exec-pre-jail --description 'run the specified command before jailing.'
complete -c uwsgi_python3 -l exec-post-jail --description 'run the specified command after jailing.'
complete -c uwsgi_python3 -l exec-in-jail --description 'run the specified command in jail after initialization.'
complete -c uwsgi_python3 -l exec-as-root --description 'run the specified command before privileges drop.'
complete -c uwsgi_python3 -l exec-as-user --description 'run the specified command after privileges drop.'
complete -c uwsgi_python3 -l exec-as-user-atexit --description 'run the specified command before app exit and reload.'
complete -c uwsgi_python3 -l exec-pre-app --description 'run the specified command before app loading.'
complete -c uwsgi_python3 -l exec-post-app --description 'run the specified command after app loading.'
complete -c uwsgi_python3 -l exec-as-vassal --description 'run the specified command before exec()ing the vassal.'
complete -c uwsgi_python3 -l exec-as-emperor --description 'run the specified command in the emperor after the vassal has been started.'
complete -c uwsgi_python3 -l mount-asap --description 'mount filesystem as soon as possible.'
complete -c uwsgi_python3 -l mount-pre-jail --description 'mount filesystem before jailing.'
complete -c uwsgi_python3 -l mount-post-jail --description 'mount filesystem after jailing.'
complete -c uwsgi_python3 -l mount-in-jail --description 'mount filesystem in jail after initialization.'
complete -c uwsgi_python3 -l mount-as-root --description 'mount filesystem before privileges drop.'
complete -c uwsgi_python3 -l mount-as-vassal --description 'mount filesystem before exec()ing the vassal.'
complete -c uwsgi_python3 -l mount-as-emperor --description 'mount filesystem in the emperor after the vassal has been started.'
complete -c uwsgi_python3 -l umount-asap --description 'unmount filesystem as soon as possible.'
complete -c uwsgi_python3 -l umount-pre-jail --description 'unmount filesystem before jailing.'
complete -c uwsgi_python3 -l umount-post-jail --description 'unmount filesystem after jailing.'
complete -c uwsgi_python3 -l umount-in-jail --description 'unmount filesystem in jail after initialization.'
complete -c uwsgi_python3 -l umount-as-root --description 'unmount filesystem before privileges drop.'
complete -c uwsgi_python3 -l umount-as-vassal --description 'unmount filesystem before exec()ing the vassal.'
complete -c uwsgi_python3 -l umount-as-emperor --description 'unmount filesystem in the emperor after the vassal has been started.'
complete -c uwsgi_python3 -l wait-for-interface --description 'wait for the specified network interface to come up before running root hooks.'
complete -c uwsgi_python3 -l wait-for-interface-timeout --description 'set the timeout for wait-for-interface.'
complete -c uwsgi_python3 -l wait-interface --description 'wait for the specified network interface to come up before running root hooks.'
complete -c uwsgi_python3 -l wait-interface-timeout --description 'set the timeout for wait-for-interface.'
complete -c uwsgi_python3 -l wait-for-iface --description 'wait for the specified network interface to come up before running root hooks.'
complete -c uwsgi_python3 -l wait-for-iface-timeout --description 'set the timeout for wait-for-interface.'
complete -c uwsgi_python3 -l wait-iface --description 'wait for the specified network interface to come up before running root hooks.'
complete -c uwsgi_python3 -l wait-iface-timeout --description 'set the timeout for wait-for-interface.'
complete -c uwsgi_python3 -l wait-for-fs --description 'wait for the specified filesystem item to appear before running root hooks.'
complete -c uwsgi_python3 -l wait-for-file --description 'wait for the specified file to appear before running root hooks.'
complete -c uwsgi_python3 -l wait-for-dir --description 'wait for the specified directory to appear before running root hooks.'
complete -c uwsgi_python3 -l wait-for-mountpoint --description 'wait for the specified mountpoint to appear before running root hooks.'
complete -c uwsgi_python3 -l wait-for-fs-timeout --description 'set the timeout for wait-for-fs/file/dir.'
complete -c uwsgi_python3 -l wait-for-socket --description 'wait for the specified socket to be ready before loading apps.'
complete -c uwsgi_python3 -l wait-for-socket-timeout --description 'set the timeout for wait-for-socket.'
complete -c uwsgi_python3 -l call-asap --description 'call the specified function as soon as possible.'
complete -c uwsgi_python3 -l call-pre-jail --description 'call the specified function before jailing.'
complete -c uwsgi_python3 -l call-post-jail --description 'call the specified function after jailing.'
complete -c uwsgi_python3 -l call-in-jail --description 'call the specified function in jail after initialization.'
complete -c uwsgi_python3 -l call-as-root --description 'call the specified function before privileges drop.'
complete -c uwsgi_python3 -l call-as-user --description 'call the specified function after privileges drop.'
complete -c uwsgi_python3 -l call-as-user-atexit --description 'call the specified function before app exit and reload.'
complete -c uwsgi_python3 -l call-pre-app --description 'call the specified function before app loading.'
complete -c uwsgi_python3 -l call-post-app --description 'call the specified function after app loading.'
complete -c uwsgi_python3 -l call-as-vassal --description 'call the specified function() before exec()ing the vassal.'
complete -c uwsgi_python3 -l call-as-vassal1 --description 'call the specified function(char *) before exec()ing the vassal.'
complete -c uwsgi_python3 -l call-as-vassal3 --description 'call the specified function(char *, uid_t, gid_t) before exec()ing the vassal.'
complete -c uwsgi_python3 -l call-as-emperor --description 'call the specified function() in the emperor after the vassal has been starte…'
complete -c uwsgi_python3 -l call-as-emperor1 --description 'call the specified function(char *) in the emperor after the vassal has been …'
complete -c uwsgi_python3 -l call-as-emperor2 --description 'call the specified function(char *, pid_t) in the emperor after the vassal ha…'
complete -c uwsgi_python3 -l call-as-emperor4 --description 'call the specified function(char *, pid_t, uid_t, gid_t) in the emperor after…'
complete -c uwsgi_python3 -l ini --description 'load config from ini file.'
complete -c uwsgi_python3 -s y -l yaml --description 'load config from yaml file.'
complete -c uwsgi_python3 -l yml --description 'load config from yaml file.'
complete -c uwsgi_python3 -s j -l json --description 'load config from json file.'
complete -c uwsgi_python3 -l js --description 'load config from json file.'
complete -c uwsgi_python3 -l weight --description 'weight of the instance (used by clustering/lb/subscriptions).'
complete -c uwsgi_python3 -l auto-weight --description 'set weight of the instance (used by clustering/lb/subscriptions) automaticall…'
complete -c uwsgi_python3 -l no-server --description 'force no-server mode.'
complete -c uwsgi_python3 -l command-mode --description 'force command mode.'
complete -c uwsgi_python3 -l no-defer-accept --description 'disable deferred-accept on sockets.'
complete -c uwsgi_python3 -l tcp-nodelay --description 'enable TCP NODELAY on each request.'
complete -c uwsgi_python3 -l so-keepalive --description 'enable TCP KEEPALIVEs.'
complete -c uwsgi_python3 -l so-send-timeout --description 'set SO_SNDTIMEO.'
complete -c uwsgi_python3 -l socket-send-timeout --description 'set SO_SNDTIMEO.'
complete -c uwsgi_python3 -l so-write-timeout --description 'set SO_SNDTIMEO.'
complete -c uwsgi_python3 -l socket-write-timeout --description 'set SO_SNDTIMEO.'
complete -c uwsgi_python3 -l socket-sndbuf --description 'set SO_SNDBUF.'
complete -c uwsgi_python3 -l socket-rcvbuf --description 'set SO_RCVBUF.'
complete -c uwsgi_python3 -l limit-as --description 'limit processes address space/vsz.'
complete -c uwsgi_python3 -l limit-nproc --description 'limit the number of spawnable processes.'
complete -c uwsgi_python3 -l reload-on-as --description 'reload if address space is higher than specified megabytes.'
complete -c uwsgi_python3 -l reload-on-rss --description 'reload if rss memory is higher than specified megabytes.'
complete -c uwsgi_python3 -l evil-reload-on-as --description 'force the master to reload a worker if its address space is higher than speci…'
complete -c uwsgi_python3 -l evil-reload-on-rss --description 'force the master to reload a worker if its rss memory is higher than specifie…'
complete -c uwsgi_python3 -l mem-collector-freq --description 'set the memory collector frequency when evil reloads are in place.'
complete -c uwsgi_python3 -l reload-on-fd --description 'reload if the specified file descriptor is ready.'
complete -c uwsgi_python3 -l brutal-reload-on-fd --description 'brutal reload if the specified file descriptor is ready.'
complete -c uwsgi_python3 -l ksm --description 'enable Linux KSM.'
complete -c uwsgi_python3 -l pcre-jit --description 'enable pcre jit (if available).'
complete -c uwsgi_python3 -l never-swap --description 'lock all memory pages avoiding swapping.'
complete -c uwsgi_python3 -l touch-reload --description 'reload uWSGI if the specified file is modified/touched.'
complete -c uwsgi_python3 -l touch-workers-reload --description 'trigger reload of (only) workers if the specified file is modified/touched.'
complete -c uwsgi_python3 -l touch-chain-reload --description 'trigger chain reload if the specified file is modified/touched.'
complete -c uwsgi_python3 -l touch-logrotate --description 'trigger logrotation if the specified file is modified/touched.'
complete -c uwsgi_python3 -l touch-logreopen --description 'trigger log reopen if the specified file is modified/touched.'
complete -c uwsgi_python3 -l touch-exec --description 'run command when the specified file is modified/touched (syntax: file command…'
complete -c uwsgi_python3 -l touch-signal --description 'signal when the specified file is modified/touched (syntax: file signal).'
complete -c uwsgi_python3 -l fs-reload --description 'graceful reload when the specified filesystem object is modified.'
complete -c uwsgi_python3 -l fs-brutal-reload --description 'brutal reload when the specified filesystem object is modified.'
complete -c uwsgi_python3 -l fs-signal --description 'raise a uwsgi signal when the specified filesystem object is modified (syntax…'
complete -c uwsgi_python3 -l check-mountpoint --description 'destroy the instance if a filesystem is no more reachable (useful for reliabl…'
complete -c uwsgi_python3 -l mountpoint-check --description 'destroy the instance if a filesystem is no more reachable (useful for reliabl…'
complete -c uwsgi_python3 -l check-mount --description 'destroy the instance if a filesystem is no more reachable (useful for reliabl…'
complete -c uwsgi_python3 -l mount-check --description 'destroy the instance if a filesystem is no more reachable (useful for reliabl…'
complete -c uwsgi_python3 -l propagate-touch --description 'over-engineering option for system with flaky signal management.'
complete -c uwsgi_python3 -l limit-post --description 'limit request body.'
complete -c uwsgi_python3 -l no-orphans --description 'automatically kill workers if master dies (can be dangerous for availability).'
complete -c uwsgi_python3 -l prio --description 'set processes/threads priority.'
complete -c uwsgi_python3 -l cpu-affinity --description 'set cpu affinity.'
complete -c uwsgi_python3 -l post-buffering --description 'set size in bytes after which will buffer to disk instead of memory.'
complete -c uwsgi_python3 -l post-buffering-bufsize --description 'set buffer size for read() in post buffering mode.'
complete -c uwsgi_python3 -l body-read-warning --description 'set the amount of allowed memory allocation (in megabytes) for request body b…'
complete -c uwsgi_python3 -l upload-progress --description 'enable creation of .'
complete -c uwsgi_python3 -l no-default-app --description 'do not fallback to default app.'
complete -c uwsgi_python3 -l manage-script-name --description 'automatically rewrite SCRIPT_NAME and PATH_INFO.'
complete -c uwsgi_python3 -l ignore-script-name --description 'ignore SCRIPT_NAME.'
complete -c uwsgi_python3 -l catch-exceptions --description 'report exception as http output (discouraged, use only for testing).'
complete -c uwsgi_python3 -l reload-on-exception --description 'reload a worker when an exception is raised.'
complete -c uwsgi_python3 -l reload-on-exception-type --description 'reload a worker when a specific exception type is raised.'
complete -c uwsgi_python3 -l reload-on-exception-value --description 'reload a worker when a specific exception value is raised.'
complete -c uwsgi_python3 -l reload-on-exception-repr --description 'reload a worker when a specific exception type+value (language-specific) is r…'
complete -c uwsgi_python3 -l exception-handler --description 'add an exception handler.'
complete -c uwsgi_python3 -l enable-metrics --description 'enable metrics subsystem.'
complete -c uwsgi_python3 -l metric --description 'add a custom metric.'
complete -c uwsgi_python3 -l metric-threshold --description 'add a metric threshold/alarm.'
complete -c uwsgi_python3 -l metric-alarm --description 'add a metric threshold/alarm.'
complete -c uwsgi_python3 -l alarm-metric --description 'add a metric threshold/alarm.'
complete -c uwsgi_python3 -l metrics-dir --description 'export metrics as text files to the specified directory.'
complete -c uwsgi_python3 -l metrics-dir-restore --description 'restore last value taken from the metrics dir.'
complete -c uwsgi_python3 -l metric-dir --description 'export metrics as text files to the specified directory.'
complete -c uwsgi_python3 -l metric-dir-restore --description 'restore last value taken from the metrics dir.'
complete -c uwsgi_python3 -l metrics-no-cores --description 'disable generation of cores-related metrics.'
complete -c uwsgi_python3 -l udp --description 'run the udp server on the specified address.'
complete -c uwsgi_python3 -l stats --description 'enable the stats server on the specified address.'
complete -c uwsgi_python3 -l stats-server --description 'enable the stats server on the specified address.'
complete -c uwsgi_python3 -l stats-http --description 'prefix stats server json output with http headers.'
complete -c uwsgi_python3 -l stats-minified --description 'minify statistics json output.'
complete -c uwsgi_python3 -l stats-min --description 'minify statistics json output.'
complete -c uwsgi_python3 -l stats-push --description 'push the stats json to the specified destination.'
complete -c uwsgi_python3 -l stats-pusher-default-freq --description 'set the default frequency of stats pushers.'
complete -c uwsgi_python3 -l stats-pushers-default-freq --description 'set the default frequency of stats pushers.'
complete -c uwsgi_python3 -l stats-no-cores --description 'disable generation of cores-related stats.'
complete -c uwsgi_python3 -l stats-no-metrics --description 'do not include metrics in stats output.'
complete -c uwsgi_python3 -l multicast --description 'subscribe to specified multicast group.'
complete -c uwsgi_python3 -l multicast-ttl --description 'set multicast ttl.'
complete -c uwsgi_python3 -l multicast-loop --description 'set multicast loop (default 1).'
complete -c uwsgi_python3 -l master-fifo --description 'enable the master fifo.'
complete -c uwsgi_python3 -l notify-socket --description 'enable the notification socket.'
complete -c uwsgi_python3 -l subscription-notify-socket --description 'set the notification socket for subscriptions.'
complete -c uwsgi_python3 -l legion --description 'became a member of a legion.'
complete -c uwsgi_python3 -l legion-mcast --description 'became a member of a legion (shortcut for multicast).'
complete -c uwsgi_python3 -l legion-node --description 'add a node to a legion.'
complete -c uwsgi_python3 -l legion-freq --description 'set the frequency of legion packets.'
complete -c uwsgi_python3 -l legion-tolerance --description 'set the tolerance of legion subsystem.'
complete -c uwsgi_python3 -l legion-death-on-lord-error --description 'declare itself as a dead node for the specified amount of seconds if one of t…'
complete -c uwsgi_python3 -l legion-skew-tolerance --description 'set the clock skew tolerance of legion subsystem (default 30 seconds).'
complete -c uwsgi_python3 -l legion-lord --description 'action to call on Lord election.'
complete -c uwsgi_python3 -l legion-unlord --description 'action to call on Lord dismiss.'
complete -c uwsgi_python3 -l legion-setup --description 'action to call on legion setup.'
complete -c uwsgi_python3 -l legion-death --description 'action to call on legion death (shutdown of the instance).'
complete -c uwsgi_python3 -l legion-join --description 'action to call on legion join (first time quorum is reached).'
complete -c uwsgi_python3 -l legion-node-joined --description 'action to call on new node joining legion.'
complete -c uwsgi_python3 -l legion-node-left --description 'action to call node leaving legion.'
complete -c uwsgi_python3 -l legion-quorum --description 'set the quorum of a legion.'
complete -c uwsgi_python3 -l legion-scroll --description 'set the scroll of a legion.'
complete -c uwsgi_python3 -l legion-scroll-max-size --description 'set max size of legion scroll buffer.'
complete -c uwsgi_python3 -l legion-scroll-list-max-size --description 'set max size of legion scroll list buffer.'
complete -c uwsgi_python3 -l subscriptions-sign-check --description 'set digest algorithm and certificate directory for secured subscription syste…'
complete -c uwsgi_python3 -l subscriptions-sign-check-tolerance --description 'set the maximum tolerance (in seconds) of clock skew for secured subscription…'
complete -c uwsgi_python3 -l subscriptions-sign-skip-uid --description 'skip signature check for the specified uid when using unix sockets credential…'
complete -c uwsgi_python3 -l subscriptions-credentials-check --description 'add a directory to search for subscriptions key credentials.'
complete -c uwsgi_python3 -l subscriptions-use-credentials --description 'enable management of SCM_CREDENTIALS in subscriptions UNIX sockets.'
complete -c uwsgi_python3 -l subscription-algo --description 'set load balancing algorithm for the subscription system.'
complete -c uwsgi_python3 -l subscription-dotsplit --description 'try to fallback to the next part (dot based) in subscription key.'
complete -c uwsgi_python3 -l subscribe-to --description 'subscribe to the specified subscription server.'
complete -c uwsgi_python3 -l st --description 'subscribe to the specified subscription server.'
complete -c uwsgi_python3 -l subscribe --description 'subscribe to the specified subscription server.'
complete -c uwsgi_python3 -l subscribe2 --description 'subscribe to the specified subscription server using advanced keyval syntax.'
complete -c uwsgi_python3 -l subscribe-freq --description 'send subscription announce at the specified interval.'
complete -c uwsgi_python3 -l subscription-tolerance --description 'set tolerance for subscription servers.'
complete -c uwsgi_python3 -l unsubscribe-on-graceful-reload --description 'force unsubscribe request even during graceful reload.'
complete -c uwsgi_python3 -l start-unsubscribed --description 'configure subscriptions but do not send them (useful with master fifo).'
complete -c uwsgi_python3 -l subscribe-with-modifier1 --description 'force the specififed modifier1 when subscribing.'
complete -c uwsgi_python3 -l snmp --description 'enable the embedded snmp server.'
complete -c uwsgi_python3 -l snmp-community --description 'set the snmp community string.'
complete -c uwsgi_python3 -l ssl-verbose --description 'be verbose about SSL errors.'
complete -c uwsgi_python3 -l ssl-sessions-use-cache --description 'use uWSGI cache for ssl sessions storage.'
complete -c uwsgi_python3 -l ssl-session-use-cache --description 'use uWSGI cache for ssl sessions storage.'
complete -c uwsgi_python3 -l ssl-sessions-timeout --description 'set SSL sessions timeout (default: 300 seconds).'
complete -c uwsgi_python3 -l ssl-session-timeout --description 'set SSL sessions timeout (default: 300 seconds).'
complete -c uwsgi_python3 -l sni --description 'add an SNI-governed SSL context.'
complete -c uwsgi_python3 -l sni-dir --description 'check for cert/key/client_ca file in the specified directory and create a sni…'
complete -c uwsgi_python3 -l sni-dir-ciphers --description 'set ssl ciphers for sni-dir option.'
complete -c uwsgi_python3 -l ssl-enable3 --description 'enable SSLv3 (insecure).'
complete -c uwsgi_python3 -l ssl-option --description 'set a raw ssl option (numeric value).'
complete -c uwsgi_python3 -l sni-regexp --description 'add an SNI-governed SSL context (the key is a regexp).'
complete -c uwsgi_python3 -l ssl-tmp-dir --description 'store ssl-related temp files in the specified directory.'
complete -c uwsgi_python3 -l check-interval --description 'set the interval (in seconds) of master checks.'
complete -c uwsgi_python3 -l forkbomb-delay --description 'sleep for the specified number of seconds when a forkbomb is detected.'
complete -c uwsgi_python3 -l binary-path --description 'force binary path.'
complete -c uwsgi_python3 -l privileged-binary-patch --description 'patch the uwsgi binary with a new command (before privileges drop).'
complete -c uwsgi_python3 -l unprivileged-binary-patch --description 'patch the uwsgi binary with a new command (after privileges drop).'
complete -c uwsgi_python3 -l privileged-binary-patch-arg --description 'patch the uwsgi binary with a new command and arguments (before privileges dr…'
complete -c uwsgi_python3 -l unprivileged-binary-patch-arg --description 'patch the uwsgi binary with a new command and arguments (after privileges dro…'
complete -c uwsgi_python3 -l async --description 'enable async mode with specified cores.'
complete -c uwsgi_python3 -l max-fd --description 'set maximum number of file descriptors (requires root privileges).'
complete -c uwsgi_python3 -l logto --description 'set logfile/udp address.'
complete -c uwsgi_python3 -l logto2 --description 'log to specified file or udp address after privileges drop.'
complete -c uwsgi_python3 -l log-format --description 'set advanced format for request logging.'
complete -c uwsgi_python3 -l logformat --description 'set advanced format for request logging.'
complete -c uwsgi_python3 -l logformat-strftime --description 'apply strftime to logformat output.'
complete -c uwsgi_python3 -l log-format-strftime --description 'apply strftime to logformat output.'
complete -c uwsgi_python3 -l logfile-chown --description 'chown logfiles.'
complete -c uwsgi_python3 -l logfile-chmod --description 'chmod logfiles.'
complete -c uwsgi_python3 -l log-syslog --description 'log to syslog.'
complete -c uwsgi_python3 -l log-socket --description 'send logs to the specified socket.'
complete -c uwsgi_python3 -l req-logger --description 'set/append a request logger.'
complete -c uwsgi_python3 -l logger-req --description 'set/append a request logger.'
complete -c uwsgi_python3 -l logger --description 'set/append a logger.'
complete -c uwsgi_python3 -l logger-list --description 'list enabled loggers.'
complete -c uwsgi_python3 -l loggers-list --description 'list enabled loggers.'
complete -c uwsgi_python3 -l threaded-logger --description 'offload log writing to a thread.'
complete -c uwsgi_python3 -l log-encoder --description 'add an item in the log encoder chain.'
complete -c uwsgi_python3 -l log-req-encoder --description 'add an item in the log req encoder chain.'
complete -c uwsgi_python3 -l log-drain --description 'drain (do not show) log lines matching the specified regexp.'
complete -c uwsgi_python3 -l log-filter --description 'show only log lines matching the specified regexp.'
complete -c uwsgi_python3 -l log-route --description 'log to the specified named logger if regexp applied on logline matches.'
complete -c uwsgi_python3 -l log-req-route --description 'log requests to the specified named logger if regexp applied on logline match…'
complete -c uwsgi_python3 -l use-abort --description 'call abort() on segfault/fpe, could be useful for generating a core dump.'
complete -c uwsgi_python3 -l alarm --description 'create a new alarm, syntax: <alarm> <plugin:args>.'
complete -c uwsgi_python3 -l alarm-cheap --description 'use main alarm thread rather than create dedicated threads for curl-based ala…'
complete -c uwsgi_python3 -l alarm-freq --description 'tune the anti-loop alarm system (default 3 seconds).'
complete -c uwsgi_python3 -l alarm-fd --description 'raise the specified alarm when an fd is read for read (by default it reads 1 …'
complete -c uwsgi_python3 -l alarm-segfault --description 'raise the specified alarm when the segmentation fault handler is executed.'
complete -c uwsgi_python3 -l segfault-alarm --description 'raise the specified alarm when the segmentation fault handler is executed.'
complete -c uwsgi_python3 -l alarm-backlog --description 'raise the specified alarm when the socket backlog queue is full.'
complete -c uwsgi_python3 -l backlog-alarm --description 'raise the specified alarm when the socket backlog queue is full.'
complete -c uwsgi_python3 -l lq-alarm --description 'raise the specified alarm when the socket backlog queue is full.'
complete -c uwsgi_python3 -l alarm-lq --description 'raise the specified alarm when the socket backlog queue is full.'
complete -c uwsgi_python3 -l alarm-listen-queue --description 'raise the specified alarm when the socket backlog queue is full.'
complete -c uwsgi_python3 -l listen-queue-alarm --description 'raise the specified alarm when the socket backlog queue is full.'
complete -c uwsgi_python3 -l log-alarm --description 'raise the specified alarm when a log line matches the specified regexp, synta…'
complete -c uwsgi_python3 -l alarm-log --description 'raise the specified alarm when a log line matches the specified regexp, synta…'
complete -c uwsgi_python3 -l not-log-alarm --description 'skip the specified alarm when a log line matches the specified regexp, syntax…'
complete -c uwsgi_python3 -l not-alarm-log --description 'skip the specified alarm when a log line matches the specified regexp, syntax…'
complete -c uwsgi_python3 -l alarm-list --description 'list enabled alarms.'
complete -c uwsgi_python3 -l alarms-list --description 'list enabled alarms.'
complete -c uwsgi_python3 -l alarm-msg-size --description 'set the max size of an alarm message (default 8192).'
complete -c uwsgi_python3 -l log-master --description 'delegate logging to master process.'
complete -c uwsgi_python3 -l log-master-bufsize --description 'set the buffer size for the master logger.'
complete -c uwsgi_python3 -l log-master-stream --description 'create the master logpipe as SOCK_STREAM.'
complete -c uwsgi_python3 -l log-master-req-stream --description 'create the master requests logpipe as SOCK_STREAM.'
complete -c uwsgi_python3 -l log-reopen --description 'reopen log after reload.'
complete -c uwsgi_python3 -l log-truncate --description 'truncate log on startup.'
complete -c uwsgi_python3 -l log-maxsize --description 'set maximum logfile size.'
complete -c uwsgi_python3 -l log-backupname --description 'set logfile name after rotation.'
complete -c uwsgi_python3 -l logdate --description 'prefix logs with date or a strftime string.'
complete -c uwsgi_python3 -l log-date --description 'prefix logs with date or a strftime string.'
complete -c uwsgi_python3 -l log-prefix --description 'prefix logs with a string.'
complete -c uwsgi_python3 -l log-zero --description 'log responses without body.'
complete -c uwsgi_python3 -l log-slow --description 'log requests slower than the specified number of milliseconds.'
complete -c uwsgi_python3 -l log-4xx --description 'log requests with a 4xx response.'
complete -c uwsgi_python3 -l log-5xx --description 'log requests with a 5xx response.'
complete -c uwsgi_python3 -l log-big --description 'log requestes bigger than the specified size.'
complete -c uwsgi_python3 -l log-sendfile --description 'log sendfile requests.'
complete -c uwsgi_python3 -l log-ioerror --description 'log requests with io errors.'
complete -c uwsgi_python3 -l log-micros --description 'report response time in microseconds instead of milliseconds.'
complete -c uwsgi_python3 -l log-x-forwarded-for --description 'use the ip from X-Forwarded-For header instead of REMOTE_ADDR.'
complete -c uwsgi_python3 -l master-as-root --description 'leave master process running as root.'
complete -c uwsgi_python3 -l drop-after-init --description 'run privileges drop after plugin initialization.'
complete -c uwsgi_python3 -l drop-after-apps --description 'run privileges drop after apps loading.'
complete -c uwsgi_python3 -l force-cwd --description 'force the initial working directory to the specified value.'
complete -c uwsgi_python3 -l binsh --description 'override \\,/bin/sh\\/ (used by exec hooks, it always fallback to \\,/bin/sh\\/).'
complete -c uwsgi_python3 -l chdir --description 'chdir to specified directory before apps loading.'
complete -c uwsgi_python3 -l chdir2 --description 'chdir to specified directory after apps loading.'
complete -c uwsgi_python3 -l lazy --description 'set lazy mode (load apps in workers instead of master).'
complete -c uwsgi_python3 -l lazy-apps --description 'load apps in each worker instead of the master.'
complete -c uwsgi_python3 -l cheap --description 'set cheap mode (spawn workers only after the first request).'
complete -c uwsgi_python3 -l cheaper --description 'set cheaper mode (adaptive process spawning).'
complete -c uwsgi_python3 -l cheaper-initial --description 'set the initial number of processes to spawn in cheaper mode.'
complete -c uwsgi_python3 -l cheaper-algo --description 'choose to algorithm used for adaptive process spawning.'
complete -c uwsgi_python3 -l cheaper-step --description 'number of additional processes to spawn at each overload.'
complete -c uwsgi_python3 -l cheaper-overload --description 'increase workers after specified overload.'
complete -c uwsgi_python3 -l cheaper-algo-list --description 'list enabled cheapers algorithms.'
complete -c uwsgi_python3 -l cheaper-algos-list --description 'list enabled cheapers algorithms.'
complete -c uwsgi_python3 -l cheaper-list --description 'list enabled cheapers algorithms.'
complete -c uwsgi_python3 -l cheaper-rss-limit-soft --description 'don\'t spawn new workers if total resident memory usage of all workers is high…'
complete -c uwsgi_python3 -l cheaper-rss-limit-hard --description 'if total workers resident memory usage is higher try to stop workers.'
complete -c uwsgi_python3 -l idle --description 'set idle mode (put uWSGI in cheap mode after inactivity).'
complete -c uwsgi_python3 -l die-on-idle --description 'shutdown uWSGI when idle.'
complete -c uwsgi_python3 -l mount --description 'load application under mountpoint.'
complete -c uwsgi_python3 -l worker-mount --description 'load application under mountpoint in the specified worker or after workers sp…'
complete -c uwsgi_python3 -l threads --description 'run each worker in prethreaded mode with the specified number of threads.'
complete -c uwsgi_python3 -l thread-stacksize --description 'set threads stacksize.'
complete -c uwsgi_python3 -l threads-stacksize --description 'set threads stacksize.'
complete -c uwsgi_python3 -l thread-stack-size --description 'set threads stacksize.'
complete -c uwsgi_python3 -l threads-stack-size --description 'set threads stacksize.'
complete -c uwsgi_python3 -l vhost --description 'enable virtualhosting mode (based on SERVER_NAME variable).'
complete -c uwsgi_python3 -l vhost-host --description 'enable virtualhosting mode (based on HTTP_HOST variable).'
complete -c uwsgi_python3 -l route --description 'add a route.'
complete -c uwsgi_python3 -l route-host --description 'add a route based on Host header.'
complete -c uwsgi_python3 -l route-uri --description 'add a route based on REQUEST_URI.'
complete -c uwsgi_python3 -l route-qs --description 'add a route based on QUERY_STRING.'
complete -c uwsgi_python3 -l route-remote-addr --description 'add a route based on REMOTE_ADDR.'
complete -c uwsgi_python3 -l route-user-agent --description 'add a route based on HTTP_USER_AGENT.'
complete -c uwsgi_python3 -l route-remote-user --description 'add a route based on REMOTE_USER.'
complete -c uwsgi_python3 -l route-referer --description 'add a route based on HTTP_REFERER.'
complete -c uwsgi_python3 -l route-label --description 'add a routing label (for use with goto).'
complete -c uwsgi_python3 -l route-if --description 'add a route based on condition.'
complete -c uwsgi_python3 -l route-if-not --description 'add a route based on condition (negate version).'
complete -c uwsgi_python3 -l route-run --description 'always run the specified route action.'
complete -c uwsgi_python3 -l final-route --description 'add a final route.'
complete -c uwsgi_python3 -l final-route-status --description 'add a final route for the specified status.'
complete -c uwsgi_python3 -l final-route-host --description 'add a final route based on Host header.'
complete -c uwsgi_python3 -l final-route-uri --description 'add a final route based on REQUEST_URI.'
complete -c uwsgi_python3 -l final-route-qs --description 'add a final route based on QUERY_STRING.'
complete -c uwsgi_python3 -l final-route-remote-addr --description 'add a final route based on REMOTE_ADDR.'
complete -c uwsgi_python3 -l final-route-user-agent --description 'add a final route based on HTTP_USER_AGENT.'
complete -c uwsgi_python3 -l final-route-remote-user --description 'add a final route based on REMOTE_USER.'
complete -c uwsgi_python3 -l final-route-referer --description 'add a final route based on HTTP_REFERER.'
complete -c uwsgi_python3 -l final-route-label --description 'add a final routing label (for use with goto).'
complete -c uwsgi_python3 -l final-route-if --description 'add a final route based on condition.'
complete -c uwsgi_python3 -l final-route-if-not --description 'add a final route based on condition (negate version).'
complete -c uwsgi_python3 -l final-route-run --description 'always run the specified final route action.'
complete -c uwsgi_python3 -l error-route --description 'add an error route.'
complete -c uwsgi_python3 -l error-route-status --description 'add an error route for the specified status.'
complete -c uwsgi_python3 -l error-route-host --description 'add an error route based on Host header.'
complete -c uwsgi_python3 -l error-route-uri --description 'add an error route based on REQUEST_URI.'
complete -c uwsgi_python3 -l error-route-qs --description 'add an error route based on QUERY_STRING.'
complete -c uwsgi_python3 -l error-route-remote-addr --description 'add an error route based on REMOTE_ADDR.'
complete -c uwsgi_python3 -l error-route-user-agent --description 'add an error route based on HTTP_USER_AGENT.'
complete -c uwsgi_python3 -l error-route-remote-user --description 'add an error route based on REMOTE_USER.'
complete -c uwsgi_python3 -l error-route-referer --description 'add an error route based on HTTP_REFERER.'
complete -c uwsgi_python3 -l error-route-label --description 'add an error routing label (for use with goto).'
complete -c uwsgi_python3 -l error-route-if --description 'add an error route based on condition.'
complete -c uwsgi_python3 -l error-route-if-not --description 'add an error route based on condition (negate version).'
complete -c uwsgi_python3 -l error-route-run --description 'always run the specified error route action.'
complete -c uwsgi_python3 -l response-route --description 'add a response route.'
complete -c uwsgi_python3 -l response-route-status --description 'add a response route for the specified status.'
complete -c uwsgi_python3 -l response-route-host --description 'add a response route based on Host header.'
complete -c uwsgi_python3 -l response-route-uri --description 'add a response route based on REQUEST_URI.'
complete -c uwsgi_python3 -l response-route-qs --description 'add a response route based on QUERY_STRING.'
complete -c uwsgi_python3 -l response-route-remote-addr --description 'add a response route based on REMOTE_ADDR.'
complete -c uwsgi_python3 -l response-route-user-agent --description 'add a response route based on HTTP_USER_AGENT.'
complete -c uwsgi_python3 -l response-route-remote-user --description 'add a response route based on REMOTE_USER.'
complete -c uwsgi_python3 -l response-route-referer --description 'add a response route based on HTTP_REFERER.'
complete -c uwsgi_python3 -l response-route-label --description 'add a response routing label (for use with goto).'
complete -c uwsgi_python3 -l response-route-if --description 'add a response route based on condition.'
complete -c uwsgi_python3 -l response-route-if-not --description 'add a response route based on condition (negate version).'
complete -c uwsgi_python3 -l response-route-run --description 'always run the specified response route action.'
complete -c uwsgi_python3 -l router-list --description 'list enabled routers.'
complete -c uwsgi_python3 -l routers-list --description 'list enabled routers.'
complete -c uwsgi_python3 -l error-page-403 --description 'add an error page (html) for managed 403 response.'
complete -c uwsgi_python3 -l error-page-404 --description 'add an error page (html) for managed 404 response.'
complete -c uwsgi_python3 -l error-page-500 --description 'add an error page (html) for managed 500 response.'
complete -c uwsgi_python3 -l websockets-ping-freq --description 'set the frequency (in seconds) of websockets automatic ping packets.'
complete -c uwsgi_python3 -l websocket-ping-freq --description 'set the frequency (in seconds) of websockets automatic ping packets.'
complete -c uwsgi_python3 -l websockets-pong-tolerance --description 'set the tolerance (in seconds) of websockets ping/pong subsystem.'
complete -c uwsgi_python3 -l websocket-pong-tolerance --description 'set the tolerance (in seconds) of websockets ping/pong subsystem.'
complete -c uwsgi_python3 -l websockets-max-size --description 'set the max allowed size of websocket messages (in Kbytes, default 1024).'
complete -c uwsgi_python3 -l websocket-max-size --description 'set the max allowed size of websocket messages (in Kbytes, default 1024).'
complete -c uwsgi_python3 -l chunked-input-limit --description 'set the max size of a chunked input part (default 1MB, in bytes).'
complete -c uwsgi_python3 -l chunked-input-timeout --description 'set default timeout for chunked input.'
complete -c uwsgi_python3 -l clock --description 'set a clock source.'
complete -c uwsgi_python3 -l clock-list --description 'list enabled clocks.'
complete -c uwsgi_python3 -l clocks-list --description 'list enabled clocks.'
complete -c uwsgi_python3 -l add-header --description 'automatically add HTTP headers to response.'
complete -c uwsgi_python3 -l rem-header --description 'automatically remove specified HTTP header from the response.'
complete -c uwsgi_python3 -l del-header --description 'automatically remove specified HTTP header from the response.'
complete -c uwsgi_python3 -l collect-header --description 'store the specified response header in a request var (syntax: header var).'
complete -c uwsgi_python3 -l response-header-collect --description 'store the specified response header in a request var (syntax: header var).'
complete -c uwsgi_python3 -l pull-header --description 'store the specified response header in a request var and remove it from the r…'
complete -c uwsgi_python3 -l check-static --description 'check for static files in the specified directory.'
complete -c uwsgi_python3 -l check-static-docroot --description 'check for static files in the requested DOCUMENT_ROOT.'
complete -c uwsgi_python3 -l static-check --description 'check for static files in the specified directory.'
complete -c uwsgi_python3 -l static-map --description 'map mountpoint to static directory (or file).'
complete -c uwsgi_python3 -l static-map2 --description 'like static-map but completely appending the requested resource to the docroo…'
complete -c uwsgi_python3 -l static-skip-ext --description 'skip specified extension from staticfile checks.'
complete -c uwsgi_python3 -l static-index --description 'search for specified file if a directory is requested.'
complete -c uwsgi_python3 -l static-safe --description 'skip security checks if the file is under the specified path.'
complete -c uwsgi_python3 -l static-cache-paths --description 'put resolved paths in the uWSGI cache for the specified amount of seconds.'
complete -c uwsgi_python3 -l static-cache-paths-name --description 'use the specified cache for static paths.'
complete -c uwsgi_python3 -l mimefile --description 'set mime types file path (default \\,/etc/mime. types\\/).'
complete -c uwsgi_python3 -l mime-file --description 'set mime types file path (default \\,/etc/mime. types\\/).'
complete -c uwsgi_python3 -l static-expires-type --description 'set the Expires header based on content type.'
complete -c uwsgi_python3 -l static-expires-type-mtime --description 'set the Expires header based on content type and file mtime.'
complete -c uwsgi_python3 -l static-expires --description 'set the Expires header based on filename regexp.'
complete -c uwsgi_python3 -l static-expires-mtime --description 'set the Expires header based on filename regexp and file mtime.'
complete -c uwsgi_python3 -l static-expires-uri --description 'set the Expires header based on REQUEST_URI regexp.'
complete -c uwsgi_python3 -l static-expires-uri-mtime --description 'set the Expires header based on REQUEST_URI regexp and file mtime.'
complete -c uwsgi_python3 -l static-expires-path-info --description 'set the Expires header based on PATH_INFO regexp.'
complete -c uwsgi_python3 -l static-expires-path-info-mtime --description 'set the Expires header based on PATH_INFO regexp and file mtime.'
complete -c uwsgi_python3 -l static-gzip --description 'if the supplied regexp matches the static file translation it will search for…'
complete -c uwsgi_python3 -l static-gzip-all --description 'check for a gzip version of all requested static files.'
complete -c uwsgi_python3 -l static-gzip-dir --description 'check for a gzip version of all requested static files in the specified dir/p…'
complete -c uwsgi_python3 -l static-gzip-prefix --description 'check for a gzip version of all requested static files in the specified dir/p…'
complete -c uwsgi_python3 -l static-gzip-ext --description 'check for a gzip version of all requested static files with the specified ext…'
complete -c uwsgi_python3 -l static-gzip-suffix --description 'check for a gzip version of all requested static files with the specified ext…'
complete -c uwsgi_python3 -l honour-range --description 'enable support for the HTTP Range header.'
complete -c uwsgi_python3 -l offload-threads --description 'set the number of offload threads to spawn (per-worker, default 0).'
complete -c uwsgi_python3 -l offload-thread --description 'set the number of offload threads to spawn (per-worker, default 0).'
complete -c uwsgi_python3 -l file-serve-mode --description 'set static file serving mode.'
complete -c uwsgi_python3 -l fileserve-mode --description 'set static file serving mode.'
complete -c uwsgi_python3 -l disable-sendfile --description 'disable sendfile() and rely on boring read()/write().'
complete -c uwsgi_python3 -l check-cache --description 'check for response data in the specified cache (empty for default cache).'
complete -c uwsgi_python3 -l close-on-exec --description 'set close-on-exec on connection sockets (could be required for spawning proce…'
complete -c uwsgi_python3 -l close-on-exec2 --description 'set close-on-exec on server sockets (could be required for spawning processes…'
complete -c uwsgi_python3 -l mode --description 'set uWSGI custom mode.'
complete -c uwsgi_python3 -l env --description 'set environment variable.'
complete -c uwsgi_python3 -l envdir --description 'load a daemontools compatible envdir.'
complete -c uwsgi_python3 -l early-envdir --description 'load a daemontools compatible envdir ASAP.'
complete -c uwsgi_python3 -l unenv --description 'unset environment variable.'
complete -c uwsgi_python3 -l vacuum --description 'try to remove all of the generated file/sockets.'
complete -c uwsgi_python3 -l file-write --description 'write the specified content to the specified file (syntax: file=value) before…'
complete -c uwsgi_python3 -l cgroup --description 'put the processes in the specified cgroup.'
complete -c uwsgi_python3 -l cgroup-opt --description 'set value in specified cgroup option.'
complete -c uwsgi_python3 -l cgroup-dir-mode --description 'set permission for cgroup directory (default is 700).'
complete -c uwsgi_python3 -l namespace --description 'run in a new namespace under the specified rootfs.'
complete -c uwsgi_python3 -l namespace-keep-mount --description 'keep the specified mountpoint in your namespace.'
complete -c uwsgi_python3 -l ns --description 'run in a new namespace under the specified rootfs.'
complete -c uwsgi_python3 -l namespace-net --description 'add network namespace.'
complete -c uwsgi_python3 -l ns-net --description 'add network namespace.'
complete -c uwsgi_python3 -l enable-proxy-protocol --description 'enable PROXY1 protocol support (only for http parsers).'
complete -c uwsgi_python3 -l reuse-port --description 'enable REUSE_PORT flag on socket (BSD only).'
complete -c uwsgi_python3 -l tcp-fast-open --description 'enable TCP_FASTOPEN flag on TCP sockets with the specified qlen value.'
complete -c uwsgi_python3 -l tcp-fastopen --description 'enable TCP_FASTOPEN flag on TCP sockets with the specified qlen value.'
complete -c uwsgi_python3 -l tcp-fast-open-client --description 'use sendto(. , MSG_FASTOPEN, . ) instead of connect() if supported.'
complete -c uwsgi_python3 -l tcp-fastopen-client --description 'use sendto(. , MSG_FASTOPEN, . ) instead of connect() if supported.'
complete -c uwsgi_python3 -l zerg --description 'attach to a zerg server.'
complete -c uwsgi_python3 -l zerg-fallback --description 'fallback to normal sockets if the zerg server is not available.'
complete -c uwsgi_python3 -l zerg-server --description 'enable the zerg server on the specified UNIX socket.'
complete -c uwsgi_python3 -l cron --description 'add a cron task.'
complete -c uwsgi_python3 -l cron2 --description 'add a cron task (key=val syntax).'
complete -c uwsgi_python3 -l unique-cron --description 'add a unique cron task.'
complete -c uwsgi_python3 -l cron-harakiri --description 'set the maximum time (in seconds) we wait for cron command to complete.'
complete -c uwsgi_python3 -l legion-cron --description 'add a cron task runnable only when the instance is a lord of the specified le…'
complete -c uwsgi_python3 -l cron-legion --description 'add a cron task runnable only when the instance is a lord of the specified le…'
complete -c uwsgi_python3 -l unique-legion-cron --description 'add a unique cron task runnable only when the instance is a lord of the speci…'
complete -c uwsgi_python3 -l unique-cron-legion --description 'add a unique cron task runnable only when the instance is a lord of the speci…'
complete -c uwsgi_python3 -l loop --description 'select the uWSGI loop engine.'
complete -c uwsgi_python3 -l loop-list --description 'list enabled loop engines.'
complete -c uwsgi_python3 -l loops-list --description 'list enabled loop engines.'
complete -c uwsgi_python3 -l worker-exec --description 'run the specified command as worker.'
complete -c uwsgi_python3 -l worker-exec2 --description 'run the specified command as worker (after post_fork hook).'
complete -c uwsgi_python3 -l attach-daemon --description 'attach a command/daemon to the master process (the command has to not go in b…'
complete -c uwsgi_python3 -l attach-control-daemon --description 'attach a command/daemon to the master process (the command has to not go in b…'
complete -c uwsgi_python3 -l smart-attach-daemon --description 'attach a command/daemon to the master process managed by a pidfile (the comma…'
complete -c uwsgi_python3 -l smart-attach-daemon2 --description 'attach a command/daemon to the master process managed by a pidfile (the comma…'
complete -c uwsgi_python3 -l legion-attach-daemon --description 'same as --attach-daemon but daemon runs only on legion lord node.'
complete -c uwsgi_python3 -l legion-smart-attach-daemon --description 'same as --smart-attach-daemon but daemon runs only on legion lord node.'
complete -c uwsgi_python3 -l legion-smart-attach-daemon2 --description 'same as --smart-attach-daemon2 but daemon runs only on legion lord node.'
complete -c uwsgi_python3 -l daemons-honour-stdin --description 'do not change the stdin of external daemons to \\,/dev/null\\/.'
complete -c uwsgi_python3 -l attach-daemon2 --description 'attach-daemon keyval variant (supports smart modes too).'
complete -c uwsgi_python3 -l plugins --description 'load uWSGI plugins.'
complete -c uwsgi_python3 -l plugin --description 'load uWSGI plugins.'
complete -c uwsgi_python3 -l need-plugins --description 'load uWSGI plugins (exit on error).'
complete -c uwsgi_python3 -l need-plugin --description 'load uWSGI plugins (exit on error).'
complete -c uwsgi_python3 -l plugins-dir --description 'add a directory to uWSGI plugin search path.'
complete -c uwsgi_python3 -l plugin-dir --description 'add a directory to uWSGI plugin search path.'
complete -c uwsgi_python3 -l plugins-list --description 'list enabled plugins.'
complete -c uwsgi_python3 -l plugin-list --description 'list enabled plugins.'
complete -c uwsgi_python3 -l autoload --description 'try to automatically load plugins when unknown options are found.'
complete -c uwsgi_python3 -l dlopen --description 'blindly load a shared library.'
complete -c uwsgi_python3 -l allowed-modifiers --description 'comma separated list of allowed modifiers.'
complete -c uwsgi_python3 -l remap-modifier --description 'remap request modifier from one id to another.'
complete -c uwsgi_python3 -l dump-options --description 'dump the full list of available options.'
complete -c uwsgi_python3 -l show-config --description 'show the current config reformatted as ini.'
complete -c uwsgi_python3 -l binary-append-data --description 'return the content of a resource to stdout for appending to a uwsgi binary (f…'
complete -c uwsgi_python3 -l print --description 'simple print.'
complete -c uwsgi_python3 -l iprint --description 'simple print (immediate version).'
complete -c uwsgi_python3 -l exit --description 'force exit() of the instance.'
complete -c uwsgi_python3 -l cflags --description 'report uWSGI CFLAGS (useful for building external plugins).'
complete -c uwsgi_python3 -l dot-h --description 'dump the uwsgi.'
complete -c uwsgi_python3 -l config-py --description 'dump the uwsgiconfig.'
complete -c uwsgi_python3 -l build-plugin --description 'build a uWSGI plugin for the current binary.'
complete -c uwsgi_python3 -l version --description 'print uWSGI version.'
complete -c uwsgi_python3 -l wsgi-file --description 'load . wsgi file.'
complete -c uwsgi_python3 -l file --description 'load . wsgi file.'
complete -c uwsgi_python3 -l eval --description 'eval python code.'
complete -c uwsgi_python3 -s w -l module --description 'load a WSGI module.'
complete -c uwsgi_python3 -l wsgi --description 'load a WSGI module.'
complete -c uwsgi_python3 -l callable --description 'set default WSGI callable name.'
complete -c uwsgi_python3 -s J -l test --description 'test a module import.'
complete -c uwsgi_python3 -s H -l home --description 'set PYTHONHOME/virtualenv.'
complete -c uwsgi_python3 -l virtualenv --description 'set PYTHONHOME/virtualenv.'
complete -c uwsgi_python3 -l venv --description 'set PYTHONHOME/virtualenv.'
complete -c uwsgi_python3 -l pyhome --description 'set PYTHONHOME/virtualenv.'
complete -c uwsgi_python3 -l py-programname --description 'set python program name.'
complete -c uwsgi_python3 -l py-program-name --description 'set python program name.'
complete -c uwsgi_python3 -l pythonpath --description 'add directory (or glob) to pythonpath.'
complete -c uwsgi_python3 -l python-path --description 'add directory (or glob) to pythonpath.'
complete -c uwsgi_python3 -l pp --description 'add directory (or glob) to pythonpath.'
complete -c uwsgi_python3 -l pymodule-alias --description 'add a python alias module.'
complete -c uwsgi_python3 -l post-pymodule-alias --description 'add a python module alias after uwsgi module initialization.'
complete -c uwsgi_python3 -l import --description 'import a python module.'
complete -c uwsgi_python3 -l pyimport --description 'import a python module.'
complete -c uwsgi_python3 -l py-import --description 'import a python module.'
complete -c uwsgi_python3 -l python-import --description 'import a python module.'
complete -c uwsgi_python3 -l shared-import --description 'import a python module in all of the processes.'
complete -c uwsgi_python3 -l shared-pyimport --description 'import a python module in all of the processes.'
complete -c uwsgi_python3 -l shared-py-import --description 'import a python module in all of the processes.'
complete -c uwsgi_python3 -l shared-python-import --description 'import a python module in all of the processes.'
complete -c uwsgi_python3 -l spooler-import --description 'import a python module in the spooler.'
complete -c uwsgi_python3 -l spooler-pyimport --description 'import a python module in the spooler.'
complete -c uwsgi_python3 -l spooler-py-import --description 'import a python module in the spooler.'
complete -c uwsgi_python3 -l spooler-python-import --description 'import a python module in the spooler.'
complete -c uwsgi_python3 -l pyargv --description 'manually set sys. argv.'
complete -c uwsgi_python3 -s O -l optimize --description 'set python optimization level.'
complete -c uwsgi_python3 -l pecan --description 'load a pecan config file.'
complete -c uwsgi_python3 -l paste --description 'load a paste. deploy config file.'
complete -c uwsgi_python3 -l paste-logger --description 'enable paste fileConfig logger.'
complete -c uwsgi_python3 -l web3 --description 'load a web3 app.'
complete -c uwsgi_python3 -l pump --description 'load a pump app.'
complete -c uwsgi_python3 -l wsgi-lite --description 'load a wsgi-lite app.'
complete -c uwsgi_python3 -l ini-paste --description 'load a paste. deploy config file containing uwsgi section.'
complete -c uwsgi_python3 -l ini-paste-logged --description 'load a paste. deploy config file containing uwsgi section (load loggers too).'
complete -c uwsgi_python3 -l reload-os-env --description 'force reload of os. environ at each request.'
complete -c uwsgi_python3 -l no-site --description 'do not import site module.'
complete -c uwsgi_python3 -l pyshell --description 'run an interactive python shell in the uWSGI environment.'
complete -c uwsgi_python3 -l pyshell-oneshot --description 'run an interactive python shell in the uWSGI environment (one-shot variant).'
complete -c uwsgi_python3 -l python --description 'run a python script in the uWSGI environment.'
complete -c uwsgi_python3 -l py --description 'run a python script in the uWSGI environment.'
complete -c uwsgi_python3 -l pyrun --description 'run a python script in the uWSGI environment.'
complete -c uwsgi_python3 -l py-tracebacker --description 'enable the uWSGI python tracebacker.'
complete -c uwsgi_python3 -l py-auto-reload --description 'monitor python modules mtime to trigger reload (use only in development).'
complete -c uwsgi_python3 -l py-autoreload --description 'monitor python modules mtime to trigger reload (use only in development).'
complete -c uwsgi_python3 -l python-auto-reload --description 'monitor python modules mtime to trigger reload (use only in development).'
complete -c uwsgi_python3 -l python-autoreload --description 'monitor python modules mtime to trigger reload (use only in development).'
complete -c uwsgi_python3 -l py-auto-reload-ignore --description 'ignore the specified module during auto-reload scan (can be specified multipl…'
complete -c uwsgi_python3 -l wsgi-env-behaviour --description 'set the strategy for allocating/deallocating the WSGI env.'
complete -c uwsgi_python3 -l wsgi-env-behavior --description 'set the strategy for allocating/deallocating the WSGI env.'
complete -c uwsgi_python3 -l start_response-nodelay --description 'send WSGI http headers as soon as possible (PEP violation).'
complete -c uwsgi_python3 -l wsgi-strict --description 'try to be fully PEP compliant disabling optimizations.'
complete -c uwsgi_python3 -l wsgi-accept-buffer --description 'accept CPython buffer-compliant objects as WSGI response in addition to strin…'
complete -c uwsgi_python3 -l wsgi-accept-buffers --description 'accept CPython buffer-compliant objects as WSGI response in addition to strin…'
complete -c uwsgi_python3 -l wsgi-disable-file-wrapper --description 'disable wsgi. file_wrapper feature.'
complete -c uwsgi_python3 -l python-version --description 'report python version.'
complete -c uwsgi_python3 -l python-raw --description 'load a python file for managing raw requests.'
complete -c uwsgi_python3 -l py-sharedarea --description 'create a sharedarea from a python bytearray object of the specified size.'
complete -c uwsgi_python3 -l py-call-osafterfork --description 'enable child processes running cpython to trap OS signals.'
complete -c uwsgi_python3 -l python-worker-override --description 'override worker with the specified python script.'

